{"ast":null,"code":"var _jsxFileName = \"/Users/michaeljester/Development/code/lutrivia-react-wdc01-seng-ft-060120/lutrivia/src/Question.js\";\nimport React from 'react';\n\nconst Question = props => {\n  const {\n    text,\n    index,\n    answer\n  } = props.question;\n  const disabledCheck = props.answeredQuestions.map(q => {\n    return q.index;\n  }).includes(index) ? true : false;\n  let color; // if ( disabledCheck &&  ) {\n  //     if ()\n  // }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 13\n    }\n  }, text), /*#__PURE__*/React.createElement(\"button\", {\n    disabled: disabledCheck,\n    onClick: event => {\n      props.checkAnswer(true, props.question, event);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }\n  }, \"True\"), /*#__PURE__*/React.createElement(\"button\", {\n    disabled: disabledCheck,\n    onClick: event => {\n      props.checkAnswer(false, props.question, event);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }\n  }, \"False\"));\n};\n\nexport default Question;","map":{"version":3,"sources":["/Users/michaeljester/Development/code/lutrivia-react-wdc01-seng-ft-060120/lutrivia/src/Question.js"],"names":["React","Question","props","text","index","answer","question","disabledCheck","answeredQuestions","map","q","includes","color","event","checkAnswer"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,QAAQ,GAAIC,KAAD,IAAW;AAExB,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA,KAAR;AAAeC,IAAAA;AAAf,MAA0BH,KAAK,CAACI,QAAtC;AACA,QAAMC,aAAa,GAAGL,KAAK,CAACM,iBAAN,CAAwBC,GAAxB,CAA4BC,CAAC,IAAI;AAAC,WAAOA,CAAC,CAACN,KAAT;AAAe,GAAjD,EAAmDO,QAAnD,CAA4DP,KAA5D,IAAqE,IAArE,GAA4E,KAAlG;AAEA,MAAIQ,KAAJ,CALwB,CAOxB;AACA;AACA;;AAEA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKT,IAAL,CADJ,eAGI;AACI,IAAA,QAAQ,EAAEI,aADd;AAEI,IAAA,OAAO,EAAGM,KAAD,IAAW;AAACX,MAAAA,KAAK,CAACY,WAAN,CAAkB,IAAlB,EAAwBZ,KAAK,CAACI,QAA9B,EAAwCO,KAAxC;AAA+C,KAFxE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHJ,eASI;AACI,IAAA,QAAQ,EAAEN,aADd;AAEI,IAAA,OAAO,EAAGM,KAAD,IAAW;AAACX,MAAAA,KAAK,CAACY,WAAN,CAAkB,KAAlB,EAAyBZ,KAAK,CAACI,QAA/B,EAAyCO,KAAzC;AAAgD,KAFzE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aATJ,CADJ;AAiBH,CA5BD;;AA8BA,eAAeZ,QAAf","sourcesContent":["import React from 'react'\n\nconst Question = (props) => {\n\n    const { text, index, answer } = props.question\n    const disabledCheck = props.answeredQuestions.map(q => {return q.index}).includes(index) ? true : false\n    \n    let color;\n\n    // if ( disabledCheck &&  ) {\n    //     if ()\n    // }\n\n    return (\n        <div>\n            <h4>{text}</h4>\n\n            <button \n                disabled={disabledCheck}\n                onClick={(event) => {props.checkAnswer(true, props.question, event)}}\n                >True\n            </button>\n\n            <button \n                disabled={disabledCheck}\n                onClick={(event) => {props.checkAnswer(false, props.question, event)}}\n            >False\n            </button>\n        </div>\n    )\n}\n\nexport default Question"]},"metadata":{},"sourceType":"module"}