{"ast":null,"code":"var _jsxFileName = \"/Users/michaeljester/Development/code/lutrivia-react-wdc01-seng-ft-060120/lutrivia/src/Container.js\";\nimport React, { Fragment } from 'react';\nimport Data from './data';\nimport Header from './Header';\nimport QuestionsContainer from './QuestionsContainer';\n\nclass Container extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      questions: [],\n      score: 0,\n      answeredQuestions: []\n    };\n\n    this.checkAnswer = (userAnswer, question, event) => {\n      let score = this.state.score;\n\n      if (question.answer === userAnswer) {\n        event.target.style.backgroundColor = 'green';\n        score = score + 1;\n      } else {\n        event.target.style.backgroundColor = 'red';\n      }\n\n      this.setState({\n        score: score,\n        answeredQuestions: [...this.state.answeredQuestions, {\n          index: question.index,\n          answer: userAnswer\n        }]\n      });\n    };\n\n    this.resetGame = () => {\n      this.setState({\n        score: 0,\n        answeredQuestions: []\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.setState({\n      questions: Data.questions.map((question, index) => {\n        return { ...question,\n          index: index\n        };\n      })\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Header, {\n      score: this.state.score,\n      resetGame: this.resetGame,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(QuestionsContainer, {\n      questions: this.state.questions,\n      checkAnswer: this.checkAnswer,\n      answeredQuestions: this.state.answeredQuestions,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }\n    }));\n  }\n\n}\n\nexport default Container;","map":{"version":3,"sources":["/Users/michaeljester/Development/code/lutrivia-react-wdc01-seng-ft-060120/lutrivia/src/Container.js"],"names":["React","Fragment","Data","Header","QuestionsContainer","Container","Component","state","questions","score","answeredQuestions","checkAnswer","userAnswer","question","event","answer","target","style","backgroundColor","setState","index","resetGame","componentDidMount","map","render"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,kBAAP,MAA+B,sBAA/B;;AAEA,MAAMC,SAAN,SAAwBL,KAAK,CAACM,SAA9B,CAAwC;AAAA;AAAA;AAAA,SAEpCC,KAFoC,GAE5B;AACJC,MAAAA,SAAS,EAAE,EADP;AAEJC,MAAAA,KAAK,EAAE,CAFH;AAGJC,MAAAA,iBAAiB,EAAE;AAHf,KAF4B;;AAAA,SAcpCC,WAdoC,GActB,CAACC,UAAD,EAAaC,QAAb,EAAuBC,KAAvB,KAAiC;AAC3C,UAAIL,KAAK,GAAG,KAAKF,KAAL,CAAWE,KAAvB;;AAEA,UAAII,QAAQ,CAACE,MAAT,KAAoBH,UAAxB,EAAoC;AAChCE,QAAAA,KAAK,CAACE,MAAN,CAAaC,KAAb,CAAmBC,eAAnB,GAAqC,OAArC;AACAT,QAAAA,KAAK,GAAGA,KAAK,GAAG,CAAhB;AACH,OAHD,MAGO;AACHK,QAAAA,KAAK,CAACE,MAAN,CAAaC,KAAb,CAAmBC,eAAnB,GAAqC,KAArC;AACH;;AAED,WAAKC,QAAL,CAAc;AACVV,QAAAA,KAAK,EAAEA,KADG;AAEVC,QAAAA,iBAAiB,EAAE,CAAC,GAAG,KAAKH,KAAL,CAAWG,iBAAf,EAAkC;AAACU,UAAAA,KAAK,EAAEP,QAAQ,CAACO,KAAjB;AAAwBL,UAAAA,MAAM,EAAEH;AAAhC,SAAlC;AAFT,OAAd;AAIH,KA5BmC;;AAAA,SA8BpCS,SA9BoC,GA8BxB,MAAM;AACd,WAAKF,QAAL,CAAc;AACVV,QAAAA,KAAK,EAAE,CADG;AAEVC,QAAAA,iBAAiB,EAAE;AAFT,OAAd;AAIH,KAnCmC;AAAA;;AAQpCY,EAAAA,iBAAiB,GAAG;AAChB,SAAKH,QAAL,CAAc;AACVX,MAAAA,SAAS,EAAEN,IAAI,CAACM,SAAL,CAAee,GAAf,CAAmB,CAACV,QAAD,EAAWO,KAAX,KAAqB;AAAC,eAAO,EAAC,GAAGP,QAAJ;AAAcO,UAAAA,KAAK,EAAEA;AAArB,SAAP;AAAmC,OAA5E;AADD,KAAd;AAGH;;AAyBDI,EAAAA,MAAM,GAAG;AACL,wBACI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,MAAD;AAAQ,MAAA,KAAK,EAAE,KAAKjB,KAAL,CAAWE,KAA1B;AAAiC,MAAA,SAAS,EAAE,KAAKY,SAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,eAEI,oBAAC,kBAAD;AACI,MAAA,SAAS,EAAE,KAAKd,KAAL,CAAWC,SAD1B;AAEI,MAAA,WAAW,EAAE,KAAKG,WAFtB;AAGI,MAAA,iBAAiB,EAAE,KAAKJ,KAAL,CAAWG,iBAHlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CADJ;AASH;;AA/CmC;;AAkDxC,eAAeL,SAAf","sourcesContent":["import React, {Fragment} from 'react'\nimport Data from './data'\nimport Header from './Header'\nimport QuestionsContainer from './QuestionsContainer'\n\nclass Container extends React.Component {\n\n    state = {\n        questions: [],\n        score: 0,\n        answeredQuestions: []\n    }\n\n    componentDidMount() {\n        this.setState({\n            questions: Data.questions.map((question, index) => {return {...question, index: index}})\n        })\n    }\n\n    checkAnswer = (userAnswer, question, event) => {\n        let score = this.state.score\n\n        if (question.answer === userAnswer) {\n            event.target.style.backgroundColor = 'green'\n            score = score + 1\n        } else {\n            event.target.style.backgroundColor = 'red'\n        }\n\n        this.setState({\n            score: score,\n            answeredQuestions: [...this.state.answeredQuestions, {index: question.index, answer: userAnswer}]\n        })\n    }\n\n    resetGame = () => {\n        this.setState({\n            score: 0,\n            answeredQuestions: []\n        })\n    }\n\n    render() {\n        return (\n            <Fragment>\n                <Header score={this.state.score} resetGame={this.resetGame} />\n                <QuestionsContainer \n                    questions={this.state.questions} \n                    checkAnswer={this.checkAnswer} \n                    answeredQuestions={this.state.answeredQuestions} />\n            </Fragment>\n        )\n    }\n}\n\nexport default Container"]},"metadata":{},"sourceType":"module"}